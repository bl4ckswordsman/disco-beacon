name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build_windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: monitor-app
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build executable
        run: |
          pyinstaller --clean disco_beacon.spec
          if (Test-Path settings.json) { Copy-Item settings.json -Destination dist\DiscoBeacon\ }
      - name: Create archive
        run: |
          $version = if (Test-Path version.py) { (Get-Content version.py | Select-String -Pattern "__version__ = '(.+)'").Matches.Groups[1].Value } else { "0.0.1" }
          Compress-Archive -Path dist\DiscoBeacon -DestinationPath DiscoBeacon_Windows_$version.zip
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: DiscoBeacon_Windows
          path: DiscoBeacon_Windows_*.zip

  build_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: monitor-app
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build executable
        run: |
          pyinstaller --clean disco_beacon.spec
          if [ -f settings.json ]; then cp settings.json dist/DiscoBeacon/; fi
      - name: Create archive
        run: |
          version=$(if [ -f version.py ]; then grep -oP "__version__ = '\K[^']+" version.py; else echo "0.0.1"; fi)
          tar -czvf DiscoBeacon_Linux_$version.tar.gz -C dist DiscoBeacon
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: DiscoBeacon_Linux
          path: DiscoBeacon_Linux_*.tar.gz

  create_release:
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        id: get_version
        working-directory: monitor-app
        run: |
          if [ -f version.py ]; then
            echo "VERSION=$(grep -oP "__version__ = '\K[^']+" version.py)" >> $GITHUB_OUTPUT
          else
            echo "VERSION=0.0.1" >> $GITHUB_OUTPUT
          fi
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: DiscoBeacon_Windows
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: DiscoBeacon_Linux
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            DiscoBeacon_Windows_${{ steps.get_version.outputs.VERSION }}.zip
            DiscoBeacon_Linux_${{ steps.get_version.outputs.VERSION }}.tar.gz
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
